version: "3.7"
services:
  search-api:
    build:
      context: app/SearchApi
      args:
        PROJECT_NAME: SearchApi.Web
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      RABBITMQ__HOST: rabbitmq
      RABBITMQ__PORT: 5672
      RABBITMQ__USERNAME: guest
      RABBITMQ__PASSWORD: guest
      JAEGER_SERVICE_NAME: search-api
      JAEGER_SAMPLER_TYPE: const
      JAEGER_ENDPOINT: http://jaeger-collector:14268/api/traces
      SearchApi__WebHooks__0__Name: dynadapter
      SearchApi__WebHooks__0__Uri: http://dynadapter/PersonSearch
    ports:
      - "5050:80"
    restart: always
    networks:
      - search-api-net

  sample-adapter:
    build:
      context: app/SearchApi
      args:
        PROJECT_NAME: SearchAdapter.Sample
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      RABBITMQ__HOST: rabbitmq
      RABBITMQ__PORT: 5672
      RABBITMQ__USERNAME: guest
      RABBITMQ__PASSWORD: guest
      JAEGER_SERVICE_NAME: sample-adapter
      JAEGER_SAMPLER_TYPE: const
      JAEGER_ENDPOINT: http://jaeger-collector:14268/api/traces
    ports:
      - "5052:80"
    restart: always
    networks:
      - search-api-net

  dynadapter:
    build:
      context: app/DynamicsAdapter
    ports:
      - "5060:80"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      JAEGER_SERVICE_NAME: Dynadpater
      JAEGER_SAMPLER_TYPE: const
      JAEGER_ENDPOINT: http://jaeger-collector:14268/api/traces
      SCHEDULER__CRON: 0/5 * * * * ?
      SEARCHAPI__BASEURL: http://search-api
      OAUTH__OAUTHURL: ${OAUTH__OAUTHURL}
      OAUTH__RESOURCEURL: ${OAUTH__RESOURCEURL}
      OAUTH__CLIENTID: ${OAUTH__CLIENTID}
      OAUTH__SECRET: ${OAUTH__SECRET}
      OAUTH__USERNAME: ${OAUTH__USERNAME}
      OAUTH__PASSWORD: ${OAUTH__PASSWORD}
      APIGATEWAY__BASEPATH: ${APIGATEWAY__BASEPATH}
    restart: always
    networks:
      - search-api-net

  rabbitmq:
    image: rabbitmq:3.7.15-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - data-rabbit:/var/lib/rabbitmq/mnesia/rabbit@app-rabbitmq:cached
    restart: always
    networks:
      - search-api-net

  jaeger-collector:
    image: jaegertracing/jaeger-collector
    command:
      [
        "--cassandra.keyspace=jaeger_v1_dc1",
        "--cassandra.servers=cassandra",
        "--collector.zipkin.http-port=9411",
      ]
    ports:
      - "14269"
      - "14268:14268"
      - "14267"
      - "14250"
      - "9411:9411"
    restart: on-failure
    depends_on:
      - cassandra-schema
    networks:
      - search-api-net

  jaeger-query:
    image: jaegertracing/jaeger-query
    command:
      ["--cassandra.keyspace=jaeger_v1_dc1", "--cassandra.servers=cassandra"]
    ports:
      - "16686:16686"
      - "16687"
    restart: on-failure
    depends_on:
      - cassandra-schema
    networks:
      - search-api-net

  cassandra:
    image: cassandra:3.9
    networks:
      - search-api-net

  cassandra-schema:
    image: jaegertracing/jaeger-cassandra-schema
    depends_on:
      - cassandra
    networks:
      - search-api-net

  watchdog:
    image: xabarilcoding/healthchecksui:2.2.35
    ports:
      - "6060:80"
    restart: always
    environment:
      HealthChecksUI:HealthChecks:0:Name: Search Api
      HealthChecksUI:HealthChecks:0:Uri: http://search-api/health
      HealthChecksUI:HealthChecks:1:Name: Dynadpater
      HealthChecksUI:HealthChecks:1:Uri: http://dynadapter/health
      HealthChecksUI:HealthChecks:3:Name: Sample Adapter
      HealthChecksUI:HealthChecks:3:Uri: http://sample-adapter/health
    networks:
      - search-api-net

  redis:
    container_name: redis
    image: redis
    hostname: redis
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    networks:
      - search-api-net
    volumes:
      - data-redis:/data
    restart: always

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander
    restart: always
    depends_on: [redis]
    networks:
      - search-api-net
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=redis
networks:
  search-api-net:

volumes:
  data-rabbit:
  data-redis:
